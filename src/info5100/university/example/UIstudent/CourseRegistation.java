/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package info5100.university.example.UIstudent;


import info5100.university.example.CourseSchedule.CourseLoad;
import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.CourseSchedule.CourseSchedule;
import info5100.university.example.CourseSchedule.SeatAssignment;
import info5100.university.example.Department.Department;
import info5100.university.example.Persona.StudentProfile;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sunzuolin
 */
public class CourseRegistation extends javax.swing.JPanel {
JPanel mainpanel;
Department department;
StudentProfile studentprofile;
    /**
     * Creates new form CourseRegistation
     */
    public CourseRegistation(JPanel mainpanel,Department department,StudentProfile studentprofile) {
        initComponents();
        this.mainpanel=mainpanel;
        this.department=department;
        this.studentprofile = studentprofile;
        String selectedsemster = (String) ComboBox1.getSelectedItem().toString();
        populateTable1(selectedsemster);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        txtcredits = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        ComboBox1 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        jLabel1.setText("CourseID");

        jLabel2.setText("CourseName");

        jLabel3.setText("credits");

        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });

        jButton1.setText("SearchID");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("SearchName");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Searchcredits");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "number", "name", "credits"
            }
        ));
        jScrollPane1.setViewportView(Table1);

        ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2025Spring", "2025Summer", "2025Fall", "2025Winter", " " }));
        ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox1ActionPerformed(evt);
            }
        });

        jButton4.setText("Enroll");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Drop");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(77, 77, 77)
                .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addGap(55, 55, 55)
                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel3)
                .addGap(90, 90, 90)
                .addComponent(txtcredits, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jButton4)
                .addGap(88, 88, 88)
                .addComponent(jButton5)
                .addGap(78, 78, 78)
                .addComponent(jButton6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtcredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox1ActionPerformed
        // TODO add your handling code here:
        String selectedsemster = (String) ComboBox1.getSelectedItem().toString();
         populateTable1(selectedsemster);
    }//GEN-LAST:event_ComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!txtid.getText().isBlank()){
            String courseNumber = txtid.getText();
            String selectedsemster = (String) ComboBox1.getSelectedItem().toString();
            populateTable2(selectedsemster,courseNumber);
            txtid.setText("");
            
        }else{
            JOptionPane.showMessageDialog(null, "please type the  number to view", "warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(!txtname.getText().isBlank()){
            String coursename = txtname.getText();
            String selectedsemster = (String) ComboBox1.getSelectedItem().toString();
            populateTable3(selectedsemster,coursename);
            txtname.setText("");
        }else{
            JOptionPane.showMessageDialog(null, "please type the  name to view", "warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(!txtcredits.getText().isBlank()){
            String coursecredits = txtcredits.getText();
            String selectedsemster = (String) ComboBox1.getSelectedItem().toString();
            populateTable4(selectedsemster,coursecredits);
            txtcredits.setText("");
        }else{
            JOptionPane.showMessageDialog(null, "please type the  credits to view", "warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int selectedRow = Table1.getSelectedRow();
        if (selectedRow >= 0) {
        CourseOffer selectedcourse = (CourseOffer) Table1.getValueAt(selectedRow, 0);
        String selectedsemster = (String) ComboBox1.getSelectedItem().toString();
        CourseLoad currentCourseLoad = studentprofile.getCourseLoadBySemester(selectedsemster);
        if (selectedcourse.isEnrollmentStatus() == true) {
           SeatAssignment sa = currentCourseLoad.newSeatAssignment(selectedcourse, studentprofile);
            if (sa != null && currentCourseLoad.getsemestercreditshours() <= 8) {
                JOptionPane.showMessageDialog(null, "Enroll successfull!", "information", JOptionPane.INFORMATION_MESSAGE); 
            } else {
                JOptionPane.showMessageDialog(null,  "Registration failed: The course is full, or you are not allowed to register for more than 8 credits this semester.", "warning", JOptionPane.WARNING_MESSAGE);
            }

        } else { 
            JOptionPane.showMessageDialog(null,  "Registration failed: This course is currently not available for enrollment.", "warning", JOptionPane.WARNING_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a course from the list and register for it.", "warning", JOptionPane.WARNING_MESSAGE);
    }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
          int selectedRow = Table1.getSelectedRow();
        if (selectedRow >=0) {
          CourseOffer selectedcourse = (CourseOffer) Table1.getValueAt(selectedRow, 0);
          String selectedsemster = (String) ComboBox1.getSelectedItem().toString();
          CourseLoad currentCourseLoad = studentprofile.getCourseLoadBySemester(selectedsemster);
          SeatAssignment seatassignment1 = currentCourseLoad.getAssignmentByCourseOffer(selectedcourse);
        if (seatassignment1 != null) {
            boolean dropped = currentCourseLoad.dropCourse(seatassignment1); 
            if (dropped) {
                JOptionPane.showMessageDialog(null, "Drop successfully", "information",JOptionPane.INFORMATION_MESSAGE); 
            } else {
                 JOptionPane.showMessageDialog(null, "Drop failed due to an unknown error.", "warning",JOptionPane.WARNING_MESSAGE);
            }
        } else { 
            JOptionPane.showMessageDialog(null, "You are not registered for this course or in this semester.", "warning",JOptionPane.WARNING_MESSAGE);
        }
        } else {
        JOptionPane.showMessageDialog(null, "Please select an course from the list to drop", "warning",JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) mainpanel.getLayout();
        layout.previous(mainpanel);
        mainpanel.remove(this);
    }//GEN-LAST:event_jButton6ActionPerformed
    private void populateTable1(String selectedsemster) {
       DefaultTableModel model = (DefaultTableModel)Table1.getModel();
       model.setRowCount(0);
       CourseSchedule courseschedule = department.getCalendar().getCourseSchedule(selectedsemster);
       if (courseschedule == null) {
       JOptionPane.showMessageDialog(null, "No course schedule found for semester:", "warning",JOptionPane.WARNING_MESSAGE);
    }
       for(  CourseOffer c : courseschedule.getSchedule()){ 
           Object[] row = new Object[3];
           row[0] = c; 
           row[1] = c.getCourseName();
           row[2] = c.getCreditHours();
         
          model.addRow(row);
        }}
    private void populateTable2(String selectedsemster,String selectedid) {
        DefaultTableModel model = (DefaultTableModel)Table1.getModel();
        model.setRowCount(0);
        CourseSchedule courseschedule = department.getCalendar().getCourseSchedule(selectedsemster);
        int selectedID = Integer.parseInt(selectedid);
        if (courseschedule == null) {
        JOptionPane.showMessageDialog(null, "No course schedule found for semester:", "warning",JOptionPane.WARNING_MESSAGE);
        
    }
       for(  CourseOffer c : courseschedule.getSchedule()){ 
           if (c.getCourseNumber()==(selectedID)){
           Object[] row = new Object[3];
           row[0] = c;
           row[1] = c.getCourseName();
           row[2] = c.getCreditHours();
          model.addRow(row);
        }}}
    private void populateTable3(String selectedsemster,String selectedname) {
        DefaultTableModel model = (DefaultTableModel)Table1.getModel();
        model.setRowCount(0);
        CourseSchedule courseschedule = department.getCalendar().getCourseSchedule(selectedsemster);
        if (courseschedule == null) {
        JOptionPane.showMessageDialog(null, "No course schedule found for semester:", "warning",JOptionPane.WARNING_MESSAGE);
        
    }
       for(  CourseOffer c : courseschedule.getSchedule()){ 
           if (c.getCourseName().equals(selectedname)){
           Object[] row = new Object[3];
           row[0] = c;
           row[1] = c.getCourseName();
           row[2] = c.getCreditHours();
         
          model.addRow(row);
        }}}
    private void populateTable4(String selectedsemster,String selectedcredits) {
        DefaultTableModel model = (DefaultTableModel)Table1.getModel();
        model.setRowCount(0);
        CourseSchedule courseschedule = department.getCalendar().getCourseSchedule(selectedsemster);
        int creditHours = Integer.parseInt(selectedcredits);
        if (courseschedule == null) {
        JOptionPane.showMessageDialog(null, "No course schedule found for semester:", "warning",JOptionPane.WARNING_MESSAGE);
        
    }
       for(  CourseOffer c : courseschedule.getSchedule()){ 
           if (c.getCreditHours()==creditHours){
           Object[] row = new Object[3];
           row[0] = c;
           row[1] = c.getCourseName();
           row[2] = c.getCreditHours();
         
           model.addRow(row);
        }}}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox1;
    private javax.swing.JTable Table1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtcredits;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables
}
