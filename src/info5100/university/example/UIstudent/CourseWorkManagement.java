/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package info5100.university.example.UIstudent;

import info5100.university.example.CourseSchedule.CourseLoad;
import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.CourseSchedule.SeatAssignment;
import info5100.university.example.Department.Department;
import info5100.university.example.Persona.Faculty.Assignment;
import info5100.university.example.Persona.Faculty.StudentAssignment;
import info5100.university.example.Persona.StudentProfile;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sunzuolin
 */
public class CourseWorkManagement extends javax.swing.JPanel {
JPanel mainpanel;
Department department;
StudentProfile studentprofile;

    /**
     * Creates new form CourseWorkManagement
     */
    public CourseWorkManagement(JPanel mainpanel,Department department,StudentProfile studentprofile) {
        initComponents();
        this.mainpanel=mainpanel;
        this.department=department;
        this.studentprofile = studentprofile;
        String selectedsemester = (String) ComboBox2.getSelectedItem().toString();
        populateStudentAssignmentsTable(this.studentprofile, selectedsemester);
    }
public void populateStudentAssignmentsTable(StudentProfile studentprofile, String selectedSemesterName) {
    
    DefaultTableModel model = (DefaultTableModel) table2.getModel();
    model.setRowCount(0);
    CourseLoad currentcourseload = studentprofile.getCourseLoadBySemester(selectedSemesterName);
    for(SeatAssignment sa : currentcourseload.getSeatAssignments()){
        CourseOffer co = sa.getSeat().getCourseOffer();
        ArrayList<Assignment> courseassignments = co.getFacultyassignment().getAssignments();
        for(Assignment assignment : courseassignments){
            Object[] row = new Object[5];
            row[0]=co.getCourseName();
            row[1]= assignment.getFacultyProfile().getFirstName();
            row[2]= assignment;
            row[3]= assignment.getMaxPoints();
            StudentAssignment studentRecord = sa.getStudentAssignmentRecord(assignment.getAssignmentName());


        if (studentRecord != null) {  
            row[4] = studentRecord.getCompleted() ? "Yes (已提交)" : "No (未提交)";
        } else {
            row[4] = "No (未提交)"; 
}
            model.addRow(row);
        }
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        ComboBox2 = new javax.swing.JComboBox<>();

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CourseOffer", "Teacher", "assignment", "maxpoints", "status"
            }
        ));
        jScrollPane1.setViewportView(table2);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setText("Assignments");

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2025Spring", "2025Summer", "2025Fall", "2025Winter", " " }));
        ComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jButton1)
                .addGap(178, 178, 178)
                .addComponent(jButton2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addComponent(ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox2ActionPerformed
        // TODO add your handling code here:
        String selectedsemester = (String) ComboBox2.getSelectedItem().toString();
        populateStudentAssignmentsTable(studentprofile, selectedsemester);
    }//GEN-LAST:event_ComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        CardLayout layout = (CardLayout) mainpanel.getLayout();
        layout.previous(mainpanel);
        mainpanel.remove(this);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          int selectedRow = table2.getSelectedRow();
        if (selectedRow >=0) {
          Assignment selectedassignment = (Assignment) table2.getValueAt(selectedRow, 2);
          String courseName = (String) table2.getValueAt(selectedRow, 0);
          String selectedSemester = (String) ComboBox2.getSelectedItem();
          CourseLoad currentCourseLoad = studentprofile.getCourseLoadBySemester(selectedSemester);
          if (currentCourseLoad == null) {
            JOptionPane.showMessageDialog(null, "未找到课表", "错误", JOptionPane.ERROR_MESSAGE);
            return;
        }
        SeatAssignment selectedSeatAssignment = currentCourseLoad.findSeatAssignmentByCourseName(courseName);
            AssignmentDetail  panel = new AssignmentDetail(mainpanel,department, selectedassignment,studentprofile,selectedSeatAssignment);
            mainpanel.add("AssignmentDetail", panel);
            CardLayout layout = (CardLayout) mainpanel.getLayout();
            layout.next(mainpanel);
          } else {
        JOptionPane.showMessageDialog(null, "Please select an course from the list to enroll", "warning",JOptionPane.WARNING_MESSAGE);
    }
      
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table2;
    // End of variables declaration//GEN-END:variables
}
